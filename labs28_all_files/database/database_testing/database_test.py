# -*- coding: utf-8 -*-
"""database_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Lambda-School-Labs/human-rights-first-ds-e/blob/main/labs28_all_files/database/database_testing/database_test.ipynb
"""

import psycopg2
import pandas as pd

df = pd.read_csv('all_sources_geoed.csv', index_col=[0], sep='|')

def copy_query(c, file_path, table_name, cols_tuple):

    schema_table = table_name
    with open(file_path, 'r') as f:
        next(f)
        c.copy_from(f, schema_table, sep=',', null='null', columns=cols_tuple)

file_p = "all_sources_geoed.csv"
table_n = "original_all_sources_geoed"
cols_t = ('ind','src', 'state', 'city', 'description', 'tags', 'geolocation', 'title', 'date', 'date_text', 'id', 'lat', 'long')

try:
    #function for establishing connection
    connection = psycopg2.connect(user= "postgres_hrf_L28",
                                        password= "P98bOOSz4YWnojw1htOo", 
                                        host= "database-2-hrf-ds-e.cjb51vwbigfl.us-east-1.rds.amazonaws.com",
                                        port = "5432",  
                                        database = "postgres")
    cursor = connection.cursor()
    #print POSTGRES Conn properties
    print(connection.get_dsn_parameters(), "\n")

except Exception as ex:
        print("connection error: ")
        print (ex)

#THIS line of code was quickly written to remove all commas from strings for ease of SQL query,
#can be refined to not brute force delete all commas

#df['description'] = df['description'].str.replace(",", "")

#THIS NEEDS TO RUN THROUGH WHOLE DF NOT JUST SRC

cols_to_check = ['src', 'state', 'city', 'description', 'tags', 'geolocation', 'title',
       'date', 'date_text', 'id', 'lat', 'long']

df['src'] = df['src'].astype(str).str.replace('|', '', regex=True)

df.to_csv('all_sources_geoed.csv', sep='|')

#create all_sources_geod.csv
cursor.execute("""CREATE TABLE all_sources_geod(
    ind SERIAL PRIMARY KEY,
    src text,
    state text,
    city text,
    description text,
    tags text,
    geolocation text,
    title text,
    date text,
    date_text text,
    id text,
    lat float,
    long float)""")


connection.commit()

try:
    #INSERTING
    copy_query(cursor, file_p, table_n, cols_t)
    #INSERTING END

    #COMMIT
    connection.commit()
    #COMMITING END
except (Exception, psycopg2.Error) as error:
    print("error while connecting to postgreSQL", error)

#TEST QUERY :)

sql="""
SELECT *
FROM all_sources_geod
ORDER BY ind
"""
pd.read_sql(sql, con=connection)

df.iloc[195]

connection.commit()
with open('all_sources_geoed.csv', 'r', encoding="utf8") as row:
    next(row) #skip header
    cursor.copy_from(row, 'all_sources_geod', sep='|')


connection.commit()